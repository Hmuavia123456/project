import json

file_name = "accounts.json"

def load_accounts():
    try:
        with open(file_name, "r") as file:
            return json.load(file)
    except:
        return {}

def save_accounts(accounts):
    with open(file_name, "w") as file:
        json.dump(accounts, file)

accounts = load_accounts()

def create_account():
    number = input("Account Number: ")
    if number in accounts:
        print("Account already exists.")
        return
    name = input("Account Holder Name: ")
    accounts[number] = {"name": name, "balance": 0, "history": []}
    save_accounts(accounts)
    print("Account created.")

def deposit():
    number = input("Account Number: ")
    if number in accounts:
        try:
            amount = float(input("Amount to deposit: "))
            accounts[number]["balance"] += amount
            accounts[number]["history"].append(f"Deposit: +{amount}")
            save_accounts(accounts)
            print("Amount deposited.")
        except:
            print("Invalid amount.")
    else:
        print("Account not found.")

def withdraw():
    number = input("Account Number: ")
    if number in accounts:
        try:
            amount = float(input("Amount to withdraw: "))
            if accounts[number]["balance"] >= amount:
                accounts[number]["balance"] -= amount
                accounts[number]["history"].append(f"Withdraw: -{amount}")
                save_accounts(accounts)
                print("Amount withdrawn.")
            else:
                print("Insufficient balance.")
        except:
            print("Invalid amount.")
    else:
        print("Account not found.")

def check_balance():
    number = input("Account Number: ")
    if number in accounts:
        print(f"Balance: {accounts[number]['balance']}")
    else:
        print("Account not found.")

def transaction_history():
    number = input("Account Number: ")
    if number in accounts:
        for t in accounts[number]["history"]:
            print("-", t)
    else:
        print("Account not found.")

while True:
    print("\n1. Create Account")
    print("2. Deposit")
    print("3. Withdraw")
    print("4. Check Balance")
    print("5. Transaction History")
    print("6. Exit")

    choice = input("Choose (1-6): ")

    if choice == "1":
        create_account()
    elif choice == "2":
        deposit()
    elif choice == "3":
        withdraw()
    elif choice == "4":
        check_balance()
    elif choice == "5":
        transaction_history()
    elif choice == "6":
        print("Exiting...")
        break
    else:
        print("Invalid option.")
